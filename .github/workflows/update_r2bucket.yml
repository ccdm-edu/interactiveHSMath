---
# Figure out static code files that have changed and copy/slam the new version into Cloudflare R2 bucket
# Dont have an existing action to delete from R2 bucket--do manually since no problem having junk files in R2 bucket
name: update_r2bucket
run-name: ${{ github.actor }} is updating R2 bucket for static code/public images

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  files-changed:
    name: detect what files changed
    runs-on: ubuntu-latest
    timeout-minutes: 3
    outputs:
      upload_src_dir: ${{ steps.string_to_array.outputs.dir_array }}
      run_the_upload: ${{ steps.changes.outputs.static }}
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of the branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Paths Changes Filter
        uses: dorny/paths-filter@v3.0.2
        id: changes
        with:
          list-files: 'csv'
          filters: |
            static:
              - '**/static/css/**'
              - '**/static/images/**'
              - '**/static/js/**'

      - name: parse the string
        id: string_to_array
        shell: python
        # need a list of directories with a changed file since r2_upload_action only works at dir level
        #if:  steps.changes.outputs.static == 'true'
        run: |
          import os
          import pathlib
          #what we get from paths-filter is list of files that changed from specified directories of 
          #interest, we need the unique directories
          #str_ver = "${{ steps.changes.outputs.static_files }}"
          str_ver = "DjangoProto/InteractiveMath_prj/static/css/FakeCSStestFile.css,DjangoProto/InteractiveMath_prj/static/js/FakeJStestFile.js,DjangoProto/InteractiveMath_prj/static/js/FakeJStestFile2.js,DjangoProto/InteractiveMath_prj/static/css/FakeCSStestFile2.css"
          array_of_files = str(str_ver).split(',')
          array_of_dir_path = []
          json_array_of_dir = '{"dir_array":['                  
          for i in array_of_files:
            currPath = pathlib.Path(i)
            currDir = currPath.parent
            if currDir not in array_of_dir_path:
              array_of_dir_path.append(currDir)
          #array results need to be stored as json format to be read back in as array
          for i in array_of_dir_path:
            json_array_of_dir = json_array_of_dir + '"' + str(i) + '",'
          #remove last extra , and close off json format
          json_array_of_dir = json_array_of_dir[:-1] + ']}'
          print(f'string_to_array parsing to json format is {json_array_of_dir} ')
          with open(os.environ['GITHUB_OUTPUT'], "a") as f:
            f.write(f"dir_array={json_array_of_dir}")

  loop-thru-files:
    strategy: 
      matrix:
        src_dir: ${{ fromJSON(needs.files-changed.outputs.upload_src_dir).dir_array }}
    runs-on: ubuntu-latest
    needs: [files-changed]
    steps: 
      - name: did we get array
        id: check_array
        run: |
          echo "We have file meeting the criterion ${{ matrix.src_dir }}"

          
  push_new_files_up:
    #if: ${{ needs.files-changed.outputs.run_the_upload == 'true' }} 
    if: 'false'
    runs-on: ubuntu-latest
    needs: [files-changed]
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: push dir to CF R2 bucket
        uses: ryand56/r2-upload-action@latest
        with:
          r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
          r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
          r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          r2-bucket: ${{ secrets.R2_BUCKET }}
          source-dir: DjangoProto/InteractiveMath_prj/static/css/
          destination-dir: css/
          keep-file-fresh: 'true'
          
...

