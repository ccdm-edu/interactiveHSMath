---
# Figure out static code files that have changed and copy/slam the new version into Cloudflare R2 bucket
# Dont have an existing action to delete from R2 bucket--do manually since no problem having junk files in R2 bucket
name: update_r2bucket
run-name: ${{ github.actor }} is updating R2 bucket for static code/public images

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  files-changed:
    name: detect what files changed
    runs-on: ubuntu-latest
    timeout-minutes: 3
    outputs:
      out_static_files_changed: ${{ steps.string_to_array.outputs.array_static_files_changed }}
      run_the_upload: ${{ steps.changes.outputs.static }}
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of the branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Paths Changes Filter
        uses: dorny/paths-filter@v3.0.2
        id: changes
        with:
          list-files: 'csv'
          filters: |
            static:
              - '**/static/css/**'
              - '**/static/images/**'
              - '**/static/js/**'

      # run only if some file in static code folder was changed
      - name: get array of static files
        id: string_to_array
        shell: python
        if: steps.changes.outputs.static == 'true'
        run: |
          testStr = isinstance(${{ steps.changes.outputs.static_files }}, str)
          print(f'is this a string: {testStr} ')

  #idea here is we have a list of files to be uploaded to bucket, create a matrix of jobs for each of these
  #seems to be a way GitHub actions allows looping
  #loop-thru-files:
    #strategy: 
      #matrix:
        #files2use: out_static_files_changed
    #runs-on: ubuntu-latest
    #steps: 
      #- if: run_the_upload == 'true'
        #run: |
          #echo "We have file meeting the criterion ${{ matrix.files2use }}"

...
