---
# Figure out static code files that have changed and copy/slam the new version into Cloudflare R2 bucket
# Dont have an existing action to delete from R2 bucket--do manually since no problem having junk files in R2 bucket
name: update_r2bucket
run-name: ${{ github.actor }} is updating R2 bucket for static code/public images

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  files-changed:
    name: detect what files changed
    runs-on: ubuntu-latest
    timeout-minutes: 3
    outputs:
      upload_file_str: ${{ steps.string_to_array.outputs.file_array }}
      run_the_upload: ${{ steps.changes.outputs.static }}
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of the branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Paths Changes Filter
        uses: dorny/paths-filter@v3.0.2
        id: changes
        with:
          list-files: 'csv'
          filters: |
            static:
              - '**/static/css/**'
              - '**/static/images/**'
              - '**/static/js/**'

      - name: parse the string
        id: string_to_array
        shell: python
        if:  steps.changes.outputs.static == 'true'
        run: |
          import os
          str_ver = "${{ steps.changes.outputs.static_files }}"
          array_of_files = str(str_ver).split(',')
          json_array_of_files = "{'file_array':" + array_of_files + "}"
          print(f'string_to_array parsing to json format is {json_array_of_files} ')
          with open(os.environ['GITHUB_OUTPUT'], "a") as f:
            f.write(f"file_array={json_array_of_files}")

  test_file_array: 
    # test we got the array ok
    name: delete me when tested, I wanna array
    runs-on: ubuntu-latest
    needs: [files-changed]
    steps:
      - name: test results
        id: test_results
        if: ${{ needs.files-changed.outputs.run_the_upload == 'true' }} 
        run: |
          echo 'the run-the-upload value is ${{ needs.files-changed.outputs.run_the_upload }} '
          echo 'test_file_array what we have now, in new job is ${{ fromJSON(needs.files-changed.outputs.upload_file_str) }} '  
          
  push_new_files_up:
    if: ${{ needs.files-changed.outputs.run_the_upload == 'true' }} 
    # push up the new files modified or created by creating new job for each file
    name: push files to CF R2 bucket
    runs-on: ubuntu-latest
    needs: [files-changed]
    strategy:
      matrix:
        files2use:   ${{ fromJSON(needs.files-changed.outputs.upload_file_str) }}
    steps:
      - name: upload files
        id: upload_static_files
        run: |
          echo "Uploading ${{ matrix.files2use }} to Cloudflare R2 storage bucket"
          #echo " push_new_files_up:  get this working"


          
...

